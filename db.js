require('dotenv').config();  // N·∫°p c√°c bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env

const mysql = require('mysql2/promise');  // D√πng mysql2 ƒë·ªÉ t·∫°o pool k·∫øt n·ªëi

// Ki·ªÉm tra c√°c bi·∫øn m√¥i tr∆∞·ªùng b·∫Øt bu·ªôc
const requiredEnvVars = ['DB_HOST', 'DB_USER', 'DB_PASSWORD', 'DB_NAME', 'DB_PORT'];
const missingEnvVars = requiredEnvVars.filter((varName) => !process.env[varName]);
if (missingEnvVars.length > 0) {
  console.error(`‚ùå C√°c bi·∫øn m√¥i tr∆∞·ªùng sau kh√¥ng ƒë∆∞·ª£c c·∫•u h√¨nh trong .env: ${missingEnvVars.join(', ')}`);
  process.exit(1);  // D·ª´ng ch∆∞∆°ng tr√¨nh n·∫øu thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng
} else {
  console.log(':rocket: ƒê√£ n·∫°p ƒë·∫ßy ƒë·ªß c√°c bi·∫øn m√¥i tr∆∞·ªùng:', requiredEnvVars.join(', '));
}

// T·∫°o pool k·∫øt n·ªëi MySQL v·ªõi c·∫•u h√¨nh t·ª´ c√°c bi·∫øn m√¥i tr∆∞·ªùng
const db = mysql.createPool({
  host: process.env.DB_HOST,       // V√≠ d·ª•: 'localhost'
  user: process.env.DB_USER,       // V√≠ d·ª•: 'root'
  password: process.env.DB_PASSWORD,  // M·∫≠t kh·∫©u ng∆∞·ªùi d√πng MySQL
  database: process.env.DB_NAME,   // V√≠ d·ª•: 'web_tin_tuc'
  port: process.env.DB_PORT,       // V√≠ d·ª•: '3306'
});

// K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu v√† ki·ªÉm tra k·∫øt n·ªëi
const connectDB = async () => {
  try {
    console.log('üöÄ ƒêang k·∫øt n·ªëi MySQL v·ªõi c·∫•u h√¨nh:', {
      host: process.env.DB_HOST,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD ? '********' : 'Kh√¥ng c√≥ m·∫≠t kh·∫©u',
      database: process.env.DB_NAME,
      port: process.env.DB_PORT,
    });

    const connection = await db.getConnection();  // L·∫•y k·∫øt n·ªëi t·ª´ pool
    console.log('üöÄ K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th√†nh c√¥ng!');
    connection.release();  // Gi·∫£i ph√≥ng k·∫øt n·ªëi sau khi ki·ªÉm tra
  } catch (err) {
    console.error('‚ùå K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th·∫•t b·∫°i:', err.message);
    process.exit(1);  // D·ª´ng ch∆∞∆°ng tr√¨nh n·∫øu kh√¥ng th·ªÉ k·∫øt n·ªëi
  }
};

module.exports = { db, connectDB };
